import axios from 'axios';
import React, { useEffect, useState } from 'react';
import { useQuery } from 'react-query';
import { useRouter } from 'next/router'

import LoadingFlowCircle from '../../components/LoadingFlowCircle';
import PostMap from '../../components/Post-NewsFeed/PostMap';
import Head from 'next/head';
import Header from '../../components/Header/Header';


const Index = () => {
    const router = useRouter()
    const { cat, tag, page } = router.query;
    const [shows, setShowPosts] = useState(10)
    const [getPage, setGetPage] = useState(1)

    const pageHandle = () => {
        router.query.page = getPage + 1;
        setGetPage(getPage + 1)
        router.push(router)
        router.prefetch(router);
    }


    const { data, refetch, isLoading } = useQuery(['userPost_id', cat, shows, tag, page], () => axios.get(`/api/post/admin-post?cat=${cat}&show=${shows * getPage}&tag=${tag}`,
        {
            headers: { access_token: sessionStorage.getItem('accessAutoG') }
        }
    ))
    // eslint-disable-next-line react-hooks/exhaustive-deps
    const posts = data?.data || []
    const [adminPost, setAdminPost] = useState([]);
    useEffect(() => {
        if (posts?.length > 0) {
            setAdminPost(posts)
        }
    }, [posts])


    return (
        <div>
            <Head>
                <title>Admin Post || Blog</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Header />
            <div className='grid grid-cols-12 gap-2 h-[100vh]'>
                <div className='hidden sm:block sm:col-span-4 md:col-span-4 lg:col-span-4 text-justify lg:pl-16 p-1 relative bg-base-100'>
                    <div className='absolute h-[100vh] overflow-auto sm:w-[200px] md:max-w-[300px] lg:max-w-[350px] md:w-full'>
                        {/* <LeftSideNoticeComponent /> */}
                    </div>
                </div>

                <div className='col-span-12 sm:mr-3 md:mr-0 sm:col-start-5 sm:col-end-[-1] md:col-span-8 lg:col-span-5' id='storyScroll'>
                    {
                        // isLoading || typeof adminPost?.map === 'function'
                        // ?
                        adminPost?.map((post, index) => <PostMap key={post?._id} post={post} refetch={refetch} />)
                        // :
                        // ''
                    }

                    {
                        isLoading ||
                        <div className=" p-4 mt-2 text-center w-full bg-base-100">
                            <button
                                className='btn btn-primary lg:btn-sm btn-xs w-32 btn-outline mb-4'
                                onClick={() => pageHandle()}
                            >
                                Next
                            </button>
                        </div>
                    }
                    {
                        (isLoading && adminPost.length === 0) &&
                        <div className='flex flex-col justify-between pt-40 bg-base-100 h-[100vh] items-center'>
                            <div>
                                <LoadingFlowCircle />
                            </div>
                        </div>
                    }
                    {
                        (isLoading && adminPost.length !== 0) && <div className='flex flex-col justify-between pt-4 bg-base-100 pb-4 items-center'>

                            <div>
                                <LoadingFlowCircle />
                            </div>
                        </div>
                    }
                </div>

                <div className=' col-span-3 hidden lg:block relative bg-base-100 p-3'>
                    <div className='absolute h-full overflow-auto text-justify p-2'>
                        {/* <RightSideLg /> */}
                    </div>
                </div>
            </div>
        </div>

    );
};

export default Index;

